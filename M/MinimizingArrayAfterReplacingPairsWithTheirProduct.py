'''

-Medium-


$$$

*Greedy*

Given an integer array nums and an integer k, you can perform the following operation on the array any number of times:

Select two adjacent elements of the array like x and y, such that x * y <= k, and replace both of them with a single element with value x * y (e.g. in one operation the array [1, 2, 2, 3] with k = 5 can become [1, 4, 3] or [2, 2, 3], but can't become [1, 2, 6]).
Return the minimum possible length of nums after any number of operations.

 

Example 1:

Input: nums = [2,3,3,7,3,5], k = 20
Output: 3
Explanation: We perform these operations:
1. [2,3,3,7,3,5] -> [6,3,7,3,5]
2. [6,3,7,3,5] -> [18,7,3,5]
3. [18,7,3,5] -> [18,7,15]
It can be shown that 3 is the minimum length possible to achieve with the given operation.
Example 2:

Input: nums = [3,3,3,3], k = 6
Output: 4
Explanation: We can't perform any operations since the product of every two adjacent elements is greater than 6.
Hence, the answer is 4.
 

Constraints:

1 <= nums.length <= 105
0 <= nums[i] <= 109
1 <= k <= 109



'''

from typing import List


class Solution:
    def minArrayLength(self, nums: List[int], k: int) -> int:
        n = len(nums)
        if any(i == 0 for i in nums): return 1
        ans, i = 0, 0
        while i < n:
            # if nums[i] == 0: return 1
            m, op = 1, False
            while i < n and m*nums[i] <= k:
                m *= nums[i]
                op = True
                i += 1
            ans += 1
            if not op:
                i += 1
            # if i < n:
            #     print(i, nums[i], k, ans, m)
        return ans      

    def minArrayLength2(self, nums: List[int], k: int) -> int:
        ans, y = 1, nums[0]
        for x in nums[1:]:
            if x == 0:
                return 1
            if x * y <= k:
                y *= x
            else:
                y = x
                ans += 1
        return ans  
        
import random

if __name__ == "__main__":
    print(Solution().minArrayLength(nums = [2,3,3,7,3,5], k = 20))
    print(Solution().minArrayLength(nums = [3,3,3,3], k = 6))
    print(Solution().minArrayLength(nums = [1,2,2,3], k = 5))
    nums = [183, 799, 678, 334, 168, 193, 122, 38, 724, 964, 553, 411, 222, 19, 899, 928, 876, 382, 863, 197, 150, 546, 234, 256, 769, 159, 620, 622, 37, 62, 239, 178, 741, 445, 409, 475, 603, 929, 313, 723, 144, 323, 916, 985, 295, 227, 194, 603, 618, 630, 55, 514, 647, 306, 337, 286, 500, 434, 607, 773, 814, 511, 836, 553, 478, 367, 618, 943, 858, 969, 615, 57, 999, 918, 310, 579, 921, 387, 352, 671, 806, 869, 341, 364, 296, 643, 637, 383, 149, 698, 128, 252, 127, 158, 313, 740, 434, 323, 97, 921, 802, 414, 444, 863, 753, 649, 545, 22, 168, 952, 951, 991, 954, 749, 453, 179, 95, 516, 877, 991, 947, 904, 701, 557, 343, 480, 160, 892, 851, 865, 891, 440, 960, 43, 341, 632, 862, 476, 301, 357, 631, 340, 618, 528, 476, 176, 279, 189, 805, 849, 315, 513, 801, 499, 762, 540, 193, 340, 592, 987, 395, 911, 354, 586, 582, 824, 523, 757, 895, 815, 482, 639, 343, 181, 5, 123, 944, 17, 297, 785, 420, 15, 479, 959, 449, 233, 71, 161, 526, 626, 254, 751, 24, 19, 892, 5, 403, 137, 40, 124, 396, 504, 491, 418, 549, 360, 406, 439, 652, 862, 683, 363, 41, 848, 522, 256, 832, 652, 281, 923, 659, 339, 685, 630, 34, 269, 904, 634, 46, 992, 296, 677, 101, 719, 415, 180, 189, 132, 476, 475, 335, 797, 395, 544, 423, 82, 575, 519, 297, 706, 782, 803, 672, 298, 49, 235, 103, 554, 735, 43, 507, 143, 727, 567, 792, 713, 799, 838, 612, 565, 174, 672, 403, 217, 432, 686, 152, 718, 516, 706, 919, 894, 921, 129, 86, 695, 595, 53, 556, 277, 344, 564, 740, 820, 632, 28, 544, 284, 157, 58, 847, 965, 332, 560, 666, 23, 614, 174, 112, 709, 368, 836, 59, 699, 396, 345, 837, 79, 415, 567, 295, 409, 437, 887, 170, 856, 187, 305, 463, 142, 824, 908, 431, 706, 228, 280, 779, 664, 527, 319, 617, 142, 25, 585, 320, 714, 8, 816, 773, 790, 304, 638, 386, 231, 931, 768, 7, 584, 909, 723, 121, 17, 746, 305, 854, 458, 583, 150, 25, 363, 339, 458, 152, 548, 295, 466, 595, 564, 408, 632, 768, 919, 588, 197, 344, 196, 164, 468, 334, 748, 313, 663, 213, 465, 676, 21, 837, 334, 54, 613, 786, 141, 712, 311, 256, 478, 277, 638, 825, 819, 567, 849, 900, 73, 870, 310, 879, 181, 22, 307, 343, 374, 980, 832, 51, 597, 811, 166, 458, 896, 682, 261, 395, 820, 543, 727, 238, 731, 461, 14, 106, 868, 939, 511, 108, 253, 839, 834, 11, 784, 100, 259, 89, 172, 717, 304, 654, 169, 650, 406, 147, 727, 90, 896, 4, 943, 713, 395, 418, 216, 117, 666, 455, 990, 229, 450, 344, 235, 191, 104, 736, 149, 967, 923, 350, 255, 324, 84, 975, 505, 167, 305, 222, 738, 900, 646, 239, 456, 101, 810, 24, 560, 606, 851, 971, 583, 247, 452, 237, 895, 223, 178, 886, 344, 131, 880, 410, 200, 631, 772, 534, 596, 333, 72, 612, 366, 137, 602, 948, 268, 475, 393, 526, 38, 983, 903, 897, 518, 790, 925, 579, 569, 743, 922, 301, 384, 810, 757, 193, 472, 802, 438, 451, 69, 184, 335, 377, 235, 648, 173, 452, 927, 225, 789, 758, 62, 487, 969, 402, 911, 628, 565, 831, 216, 958, 151, 345, 563, 896, 680, 242, 637, 994, 356, 42, 354, 658, 753, 216, 998, 271, 526, 309, 375, 405, 370, 808, 116, 864, 793, 37, 307, 880, 612, 114, 884, 861, 45, 966, 634, 690, 803, 192, 982, 312, 192, 681, 372, 690, 983, 723, 334, 598, 924, 480, 139, 487, 183, 47, 640, 281, 323, 154, 737, 213, 816, 995, 437, 183, 437, 906, 502, 980, 634, 128, 404, 47, 944, 87, 63, 350, 133, 355, 331, 125, 597, 808, 79, 85, 340, 424, 738, 76, 352, 884, 162, 190, 24, 760, 19, 952, 459, 320, 486, 90, 428, 564, 299, 512, 289, 501, 580, 265, 917, 321, 29, 977, 180, 275, 187, 392, 740, 733, 48, 551, 778, 347, 331, 964, 482, 668, 428, 793, 876, 24, 14, 568, 350, 8, 208, 301, 480, 275, 458, 292, 836, 516, 556, 954, 839, 189, 169, 22, 144, 104, 248, 689, 996, 184, 177, 728, 791, 905, 329, 673, 86, 673, 883, 808, 0, 197, 91, 992, 870, 492, 17, 811, 309, 632, 507, 947, 976, 368, 367, 483, 171, 180, 259, 851, 853, 875, 229, 593, 722, 46, 351, 531, 160, 425, 508, 380, 814, 209, 340, 520, 320, 32, 710, 798, 599, 510, 548, 803, 172, 204, 605, 551, 988, 321, 103, 328, 936, 431, 294, 381, 23, 288, 146, 543, 208, 369, 539, 348, 341, 66, 446, 632, 907, 6, 991, 142, 427, 935, 944, 973, 752, 595, 395, 670, 868, 614, 449, 703, 619, 119, 438, 288, 557, 770, 379, 83, 666, 797, 184, 127, 467, 2, 74, 81, 839, 34, 822, 159, 765, 154, 266, 918, 151, 676, 667, 825, 983, 114, 727, 456, 946, 482, 950, 614, 34, 111, 552, 895, 757, 28, 4, 818, 103, 217, 180, 779, 672, 541, 407, 116, 303, 339, 144, 404, 703, 601, 587, 173, 312, 79, 109, 409, 26, 985, 425, 702, 684, 115, 733, 29, 482, 369, 958, 525, 850, 624, 260, 224, 881, 290, 340, 948, 842, 164, 61, 379, 443, 668, 1, 606, 170, 296, 831, 126, 775, 589, 628, 462, 398, 870, 935, 431, 690, 741, 715, 699, 283, 41, 682, 129, 126, 788, 681, 222, 48, 371, 230, 760, 121, 291, 882, 523, 109, 195, 555, 297, 30, 859, 785, 945, 150, 138, 768, 377, 495, 163, 347, 162, 907, 385, 599, 333, 99, 667, 529, 75, 794, 495, 204, 46, 37, 979, 376, 856, 473, 414, 544, 227, 215, 594, 897, 215, 421, 682, 307, 951, 311, 888, 978, 851, 991, 819, 143, 587, 331]
    print(Solution().minArrayLength(nums = nums, k = 996))
    n = 1000
    nums = [random.randint(0, 1000) for _ in range(n)]
    k = random.randint(1, 1000)
    s1 = Solution().minArrayLength(nums, k)
    s2 = Solution().minArrayLength2(nums, k)
    if s1 != s2:
        print(s1, s2)
        print(nums, k)